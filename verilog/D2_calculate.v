module D2_calculate(
	x1,
	y1,
	x2,
	y2,
	x3,
	y3,
	r1,
	r2,
	r3,
	reset,
	clk,
	x0,
	y0,
	mem_cnt);

	//---Ports declearation: generated by Robei---
	input [15:0] x1;
	input [15:0] y1;
	input [15:0] x2;
	input [15:0] y2;
	input [15:0] x3;
	input [15:0] y3;
	input [15:0] r1;
	input [15:0] r2;
	input [15:0] r3;
	input reset;
	input clk;
	output [15:0] x0;
	output [15:0] y0;
	output mem_cnt;

	wire [15:0] x1;
	wire [15:0] y1;
	wire [15:0] x2;
	wire [15:0] y2;
	wire [15:0] x3;
	wire [15:0] y3;
	wire [15:0] r1;
	wire [15:0] r2;
	wire [15:0] r3;
	wire reset;
	wire clk;
	wire [15:0] x0;
	wire [15:0] y0;
	reg mem_cnt;

	//----Code starts here: integrated by Robei-----
	reg[15:0] d1,d2,d3,a,x,y;
	always@(posedge clk or negedge reset)
	begin
	if(reset)
	begin
		x=0;
		y=0;
	mem_cnt=0;
	end
	else
	begin
		d1=r1;
		d2=r2;
		d3=r3;
		a=(d1*d1-d2*d2+x2*x2-x1*x1+y2*y2-y1*y1)/2;
		x=(a*(y3-y1)-(d2*d2-d3*d3+x3*x3-x2*x2+y3*y3-y2*y2)*(y2-y1))/((x3-x2)*(y2-y1)-(x2-x1)*(y3-y2));
	
		y=(a-x*(x3-x1))/(x2-x1);
	mem_cnt=1;
	end
	end
	
	assign x0=x;
	assign y0=y;
	
endmodule    //D2_calculate

